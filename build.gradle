plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.3.4",
    appiumVersion = "8.0.0",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32",
    ownerVersion = "1.0.12",
    restAssured = "4.4.0",
    lombokVersion = "1.18.20"

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
    report {
        version.set(allureVersion)
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:$appiumVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "io.rest-assured:rest-assured:$restAssured",
            "io.rest-assured:json-schema-validator:$restAssured",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.11.2",
            "commons-io:commons-io:2.11.0",
            "org.assertj:assertj-core:3.22.0",
            "org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started",
                    "skipped",
                    "failed",
                    "standard_error",
                    "standard_out"
            exceptionFormat "short"
        }
    }
}
